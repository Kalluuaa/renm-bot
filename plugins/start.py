from datetime import date as date_
import datetime
import os
from pyrogram.errors.exceptions.bad_request_400 import UserNotParticipant
import time
from pyrogram import Client, filters
from pyrogram.types import (
    InlineKeyboardButton, InlineKeyboardMarkup)
import humanize
from helper.progress import humanbytes

from helper.database import insert, find_one, used_limit, usertype, uploadlimit, addpredata, total_rename, total_size
from pyrogram.file_id import FileId
from helper.database import daily as daily_
from helper.date import check_expi
import os

CHANNEL = os.environ.get('CHANNEL', "")
STRING = os.environ.get("STRING", "")
ADMIN = int(os.environ.get("ADMIN", 6430525233))
bot_username = os.environ.get("BOT_USERNAME","Public_renamebot")
log_channel = int(os.environ.get("LOG_CHANNEL", "-1002072415415"))
token = os.environ.get('TOKEN', '')
botid = token.split(':')[0]
FLOOD = 500
LAZY_PIC = os.environ.get("LAZY_PIC", "")


# Part of Day --------------------
currentTime = datetime.datetime.now()

if currentTime.hour < 12:
    wish = " G·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ Íú±·¥°·¥á·¥á·¥õ ú·¥á·¥Ä Ä·¥õ üåÖ"
elif 12 <= currentTime.hour < 12:
    wish = ' G·¥è·¥è·¥Ö ·¥Ä“ì·¥õ·¥á Ä…¥·¥è·¥è…¥ ·¥ç è L·¥è·¥†·¥á üëΩ '
else:
    wish = ' G·¥è·¥è·¥Ö ·¥á·¥†·¥á…¥…™…¥…¢  ô·¥Ä ô è ‚õÑÔ∏è'

# -------------------------------


@Client.on_message(filters.private & filters.command(["start"]))
async def start(client, message):
    old = insert(int(message.chat.id))
    try:
        id = message.text.split(' ')[1]
    except:
        txt=f"""H·¥á ü ü·¥è {wish} {message.from_user.first_name } \n
	I A·¥ç F…™ ü·¥á R·¥á…¥·¥Ä·¥ç·¥á Ä  ô·¥è·¥õ, P ü·¥á·¥ÄÍú±·¥á S·¥á…¥·¥Ö A…¥ è T·¥á ü·¥á…¢ Ä·¥Ä·¥ç ùóó·¥è·¥Ñ·¥ú·¥ç·¥á…¥·¥õ ùó¢ Ä ùó©…™·¥Ö·¥á·¥è & E…¥·¥õ·¥á Ä N·¥á·¥° F…™ ü·¥á…¥·¥Ä·¥ç·¥á T·¥è R·¥á…¥·¥Ä·¥ç·¥á I·¥õ üòã \n\n /about T·¥è K…¥·¥è·¥° M·¥è Ä·¥á ‚ò∫Ô∏è"""
        await message.reply_photo(photo=LAZY_PIC,
                                caption=txt,
                                reply_markup=InlineKeyboardMarkup(
                                      [[InlineKeyboardButton("‚öú U·¥ò·¥Ö·¥Ä·¥õ·¥áÍú± C ú·¥Ä…¥…¥·¥á ü", url="https://t.me/Max_Leech_Zone_Update")],
                                      [InlineKeyboardButton(" üë• S·¥ú·¥ò·¥ò·¥è Ä·¥õ G Ä·¥è·¥ú·¥ò", url='https://t.me/Noobseverywhere'),
                                      InlineKeyboardButton("üé• M·¥è·¥†…™·¥á C ú·¥Ä…¥…¥·¥á ü", url='https://t.me/mad_cinema')],
                                      ]))
        return
    if id:
        if old == True:
            try:
                await client.send_message(id, "Y·¥è·¥ú Ä F Ä…™·¥á…¥·¥Ö …™Íú± A ü Ä·¥á·¥Ä·¥Ö è UÍú±…™…¥…¢ O·¥ú Ä B·¥è·¥õ üôä")
                await message.reply_photo(photo=LAZY_PIC,
                                         caption=txt,
                                         reply_markup=InlineKeyboardMarkup(
                                             [[InlineKeyboardButton("‚öú U·¥ò·¥Ö·¥Ä·¥õ·¥áÍú± C ú·¥Ä…¥…¥·¥á ü ", url="https://t.me/Max_Leech_Zone_Update")],
                                              [InlineKeyboardButton(" üë• S·¥ú·¥ò·¥ò·¥è Ä·¥õ G Ä·¥è·¥ú·¥ò", url='https://t.me/Noobseverywhere'),
                                             InlineKeyboardButton("üé• M·¥è·¥†…™·¥á C ú·¥Ä…¥…¥·¥á ü", url='https://t.me/mad_cinema')],
                                             ]))
            except:
                return
        else:
            await client.send_message(id, "ü§© ùêÇùê®ùêßùê†ùê´ùêöùê≠ùê¨! ùêòùê®ùêÆ ùêñùê®ùêß ùüèùüéùüéùêåùêÅ ùêîùê©ùê•ùê®ùêöùêù ùê•ùê¢ùê¶ùê¢ùê≠")
            _user_ = find_one(int(id))
            limit = _user_["uploadlimit"]
            new_limit = limit + 104857600
            uploadlimit(int(id), new_limit)
            await message.reply_text(text=f"""
	Hello {wish} {message.from_user.first_name }\n\n
	__I A·¥ç F…™ ü·¥á R·¥á…¥·¥Ä·¥ç·¥á Ä  ô·¥è·¥õ, P ü·¥á·¥ÄÍú±·¥á S·¥á…¥·¥Ö A…¥ è T·¥á ü·¥á…¢ Ä·¥Ä·¥ç ùóó·¥è·¥Ñ·¥ú·¥ç·¥á…¥·¥õ ùó¢ Ä ùó©…™·¥Ö·¥á·¥è & E…¥·¥õ·¥á Ä N·¥á·¥° F…™ ü·¥á…¥·¥Ä·¥ç·¥á T·¥è R·¥á…¥·¥Ä·¥ç·¥á I·¥õ üòã \n\n /about T·¥è K…¥·¥è·¥° M·¥è Ä·¥á ‚ò∫Ô∏è__
	""", reply_to_message_id=message.id,
                                     reply_markup=InlineKeyboardMarkup(
                                         [[InlineKeyboardButton("‚öú U·¥ò·¥Ö·¥Ä·¥õ·¥áÍú± C ú·¥Ä…¥…¥·¥á ü", url="https://t.me/Max_Leech_Zone_Update")],
                                          [InlineKeyboardButton(" üë• S·¥ú·¥ò·¥ò·¥è Ä·¥õ G Ä·¥è·¥ú·¥ò", url='https://t.me/Noobseverywhere'),
                                          InlineKeyboardButton(" üé• M·¥è·¥†…™·¥á C ú·¥Ä…¥…¥·¥á ü", url='https://t.me/mad_cinema')],
                                          ]))
    


@Client.on_message((filters.private & (filters.document | filters.audio | filters.video)) | filters.channel & (filters.document | filters.audio | filters.video))
async def send_doc(client, message):
    update_channel = CHANNEL
    user_id = message.from_user.id
    if update_channel:
        try:
            await client.get_chat_member(update_channel, user_id)
        except UserNotParticipant:
            _newus = find_one(message.from_user.id)
            user = _newus["usertype"]
            await message.reply_text("**__ùó¨ùóºùòÇ ùóîùóøùó≤ ùó°ùóºùòÅ ùó¶ùòÇùóØùòÄùó∞ùóøùó∂ùóØùó≤ùó± ùó†ùòÜ ùóñùóµùóÆùóªùóªùó≤ùóπ__** ",
                                     reply_to_message_id=message.id,
                                     reply_markup=InlineKeyboardMarkup(
                                         [[InlineKeyboardButton("‚öú U·¥ò·¥Ö·¥Ä·¥õ·¥áÍú± C ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{update_channel}")]]))
            await client.send_message(log_channel,f"ü¶ã #rename_logs ü¶ã,\n**ID** : `{user_id}`\n**Name**: {message.from_user.first_name} {message.from_user.last_name}\n UÍú±·¥á Ä-P ü·¥Ä…¥ : {user}\n\n ",
                                                                                                       reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üî∫ R·¥áÍú±·¥õ Ä…™·¥Ñ·¥õ UÍú±·¥á Ä ( PM ) üî∫", callback_data="ceasepower")]]))
            return

    try:
        bot_data = find_one(int(botid))
        prrename = bot_data['total_rename']
        prsize = bot_data['total_size']
        user_deta = find_one(user_id)
    except:
        await message.reply_text("UÍú±·¥á A ô·¥è·¥ú·¥õ ·¥Ñ·¥ç·¥Ö F…™ ÄÍú±·¥õ /about")
    try:
        used_date = user_deta["date"]
        buy_date = user_deta["prexdate"]
        daily = user_deta["daily"]
        user_type = user_deta["usertype"]
    except:
        await message.reply_text(text=f"Hello dear {message.from_user.first_name}  W·¥á A Ä·¥á C·¥ú Ä Ä·¥á…¥·¥õ ü è W·¥è Ä·¥ã…™…¥…¢ O…¥ T ú…™Íú± IÍú±Íú±·¥ú·¥á \n\n P ü·¥á·¥ÄÍú±·¥á T Ä è T·¥è R·¥á…¥·¥Ä·¥ç·¥á F…™ ü·¥áÍú± F Ä·¥è·¥ç Y·¥è·¥ú Ä A…¥·¥è·¥õ ú·¥á Ä A·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ.\n B·¥á·¥Ñ·¥Ä·¥úÍú±·¥á T ú…™Íú± BOT C·¥Ä…¥'·¥õ R·¥á…¥·¥Ä·¥ç·¥á F…™ ü·¥á S·¥á…¥·¥õ B è S·¥è·¥ç·¥á I·¥ÖÍú±.\n\nI“ì Y·¥è·¥ú A Ä·¥á A…¥ ADMIN D·¥è…¥'·¥õ W·¥è Ä Ä è ! H·¥á Ä·¥á W·¥á H·¥Ä·¥†·¥á A S·¥è ü·¥ú·¥õ…™·¥è…¥ F·¥è Ä Y·¥è·¥ú D·¥á·¥Ä Ä {message.from_user.first_name }.\n\n P ü·¥á·¥ÄÍú±·¥á UÍú±·¥á\nüëâ `/addpremium  è·¥è·¥ú Ä_·¥è·¥õ ú·¥á Ä_·¥úÍú±·¥á Ä…™·¥Ö` üëà T·¥è UÍú±·¥á P Ä·¥á·¥ç…™·¥ú·¥ç F·¥á·¥Ä·¥ú·¥õ Ä·¥á\n\n",
                                  reply_markup=InlineKeyboardMarkup([
                                                                     [InlineKeyboardButton("ü¶ã Contact LazyDeveloper ü¶ã", url='https://telegram.me/Zenitsu_AF')],
                                                                     [InlineKeyboardButton("üî∫ Watch Tutorial üî∫", url='https://t.me/Anime_Sensei_Network')],
                                                                     [InlineKeyboardButton("ü¶ã Visit Channel  ", url='https://t.me/Anime_Sensei_Network'),
                                                                     InlineKeyboardButton("  Support Group ü¶ã", url='https://t.me/Anime_Sensei_Chat')],
                                                                     [InlineKeyboardButton("‚òï Buy Me A Coffee ‚òï", url='https://p.paytm.me/xCTH/vo37hii9')]
                                                                    ]))
        await message.reply_text(text=f"ü¶ã")
        return 

    c_time = time.time()

    if user_type == "Free":
        LIMIT = 10
    else:
        LIMIT = 00
    then = used_date + LIMIT
    left = round(then - c_time)
    conversion = datetime.timedelta(seconds=left)
    ltime = str(conversion)
    if left > 0:
        await message.reply_text(f"```S·¥è Ä Ä è D·¥ú·¥Ö·¥á I A·¥ç N·¥è·¥õ O…¥ ü è F·¥è Ä YOU \nF ü·¥è·¥è·¥Ö C·¥è…¥·¥õ Ä·¥è ü IÍú± A·¥Ñ·¥õ…™·¥†·¥á A·¥è P ü·¥á·¥ÄÍú±·¥á W·¥Ä…™·¥õ F·¥è Ä {ltime}```", reply_to_message_id=message.id)
    else:
        # Forward a single message
        media = await client.get_messages(message.chat.id, message.id)
        file = media.document or media.video or media.audio
        dcid = FileId.decode(file.file_id).dc_id
        filename = file.file_name
        value = 2147483648
        used_ = find_one(message.from_user.id)
        used = used_["used_limit"]
        limit = used_["uploadlimit"]
        expi = daily - int(time.mktime(time.strptime(str(date_.today()), '%Y-%m-%d')))
        if expi != 0:
            today = date_.today()
            pattern = '%Y-%m-%d'
            epcho = int(time.mktime(time.strptime(str(today), pattern)))
            daily_(message.from_user.id, epcho)
            used_limit(message.from_user.id, 0)
        remain = limit - used
        if remain < int(file.file_size):
            await message.reply_text(f"**‚ùóÔ∏è ùü∑ùü∂ùü∂% O“ì D·¥Ä…™ ü è {humanbytes(limit)} D·¥Ä·¥õ·¥Ä Q·¥ú·¥è·¥õ·¥Ä Ex ú·¥Ä·¥úÍú±·¥õ·¥á·¥Ö**.\n\n üìÅ F…™ ü·¥á S…™·¥¢·¥á D·¥á·¥õ·¥á·¥Ñ·¥õ·¥á·¥Ö = {humanbytes(file.file_size)}\n ‚ÑπÔ∏è UÍú±·¥á·¥Ö D·¥Ä…™ ü è L…™·¥ç…™·¥õ = {humanbytes(used)}\n\n Y·¥è·¥ú H·¥Ä·¥†·¥á O…¥ ü è {humanbytes(remain)} L·¥á“ì·¥õ O…¥ Y·¥è·¥ú Ä A·¥Ñ·¥Ñ·¥è·¥ú…¥·¥õ.\nI“ì U W·¥Ä…¥·¥õ T·¥è R·¥á…¥·¥Ä·¥ç·¥á L·¥Ä Ä…¢·¥á F…™ ü·¥á Y·¥è·¥ú N·¥á·¥á·¥Ö T·¥è U·¥ò…¢ Ä·¥Ä·¥Ö·¥á Y·¥è·¥ú Ä P ü·¥Ä…¥ üí°", reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("U·¥ò…¢ Ä·¥Ä·¥Ö·¥á üí∞üí≥", callback_data="upgrade")]]))
            return
        if value < file.file_size:
            
            if STRING:
                if buy_date == None:
                    await message.reply_text(f" Y·¥è·¥ú C·¥Ä…¥'·¥õ U·¥ò ü·¥è·¥Ä·¥Ö M·¥è Ä·¥á T ú·¥á…¥ {humanbytes(limit)} UÍú±·¥á·¥Ö D·¥Ä…™ ü è L…™·¥ç…™·¥õ {humanbytes(used)} ", reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("U·¥ò…¢ Ä·¥Ä·¥Ö·¥á üí∞üí≥", callback_data="upgrade")]]))
                    return
                pre_check = check_expi(buy_date)
                if pre_check == True:
                    await message.reply_text(f"""__W ú·¥Ä·¥õ D·¥è Y·¥è·¥ú W·¥Ä…¥·¥õ M·¥á T·¥è D·¥è W…™·¥õ ú T ú…™Íú± F…™ ü·¥á?__\n\nùóôùó∂ùóπùó≤ ùó°ùóÆùó∫ùó≤ :- <code>{filename}</code>\nùóôùó∂ùóπùó≤ ùó¶ùó∂ùòáùó≤ :- {humanize.naturalsize(file.file_size)}\nùóóùóñ ùóúùóó :- {dcid}""", reply_to_message_id=message.id, reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üìù R·¥á…¥·¥Ä·¥ç·¥á", callback_data="rename"), InlineKeyboardButton("‚úñÔ∏è C·¥Ä…¥·¥Ñ·¥á ü", callback_data="cancel")]]))
                    total_rename(int(botid), prrename)
                    total_size(int(botid), prsize, file.file_size)
                else:
                    uploadlimit(message.from_user.id, 1288490188)
                    usertype(message.from_user.id, "Free")

                    await message.reply_text(f'Y·¥è·¥ú Ä P ü·¥Ä…¥ Ex·¥ò…™ Ä·¥á·¥Ö O…¥ {buy_date}', quote=True)
                    return
            else:
                await message.reply_text("C·¥Ä…¥'·¥õ U·¥ò ü·¥è·¥Ä·¥Ö F…™ ü·¥áÍú± B…™…¢…¢·¥á Ä T ú·¥Ä…¥ ùü∏GB üòî")
                return
        else:
            if buy_date:
                pre_check = check_expi(buy_date)
                if pre_check == False:
                    uploadlimit(message.from_user.id, 1288490188)
                    usertype(message.from_user.id, "Free")

            filesize = humanize.naturalsize(file.file_size)
            fileid = file.file_id
            total_rename(int(botid), prrename)
            total_size(int(botid), prsize, file.file_size)
            await message.reply_text(f"""__W ú·¥Ä·¥õ D·¥è Y·¥è·¥ú W·¥Ä…¥·¥õ M·¥á T·¥è D·¥è W…™·¥õ ú T ú…™Íú± F…™ ü·¥á?__\n\nùóôùó∂ùóπùó≤ ùó°ùóÆùó∫ùó≤ :- <code>{filename}</code>\nùóôùó∂ùóπùó≤ ùó¶ùó∂ùòáùó≤:- {filesize}\nùóóùóñ ùóúùóó :- {dcid}""", reply_to_message_id=message.id, reply_markup=InlineKeyboardMarkup(
                [[InlineKeyboardButton("üìù R·¥á…¥·¥Ä·¥ç·¥á", callback_data="rename"),
                  InlineKeyboardButton("‚úñÔ∏è C·¥Ä…¥·¥Ñ·¥á ü", callback_data="cancel")]]))
